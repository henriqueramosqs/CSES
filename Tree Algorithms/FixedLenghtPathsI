#include <bits/stdc++.h>
using namespace std;
#define sws ios_base::sync_with_stdio(false);cout.tie(NULL);cin.tie(NULL);
#define mp make_pair
#define pb push_back
#define rep(i, a, b) for (int i = a; i < b; i++)
#define dbg(msg,x) cout<<msg<<" "<<x<<endl;
#define output(x) for(auto c:x){cout<<c<<" ";}cout<<" ";
#define ll long long 
#define ff first
#define ss second
#define endl "\n"
#define pq priority_queue
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<bool> vb;
typedef pair<int, int> pii;
typedef vector<pair<int,int> > vpp;
const int MAXN = 2*1e5+2;
vi adj[MAXN];
int st[MAXN];
bool processed[MAXN];
int k;
int freq[MAXN];
ll ans=0;
 
int getCent(int v,int p,int tSize){
    for(auto c:adj[v]){
        if(c==p || processed[c])continue;
        if((st[c]<<1)>tSize)return getCent(c,v,tSize);
    }
    return v;
}
 
 
int getSubtreeSize(int v,int p =-1){
    st[v]=1;
    for(auto c:adj[v]){
        if(c==p || processed[c])continue;
        st[v]+=getSubtreeSize(c,v);
    }
    return st[v];
}
 
void dfs2(int v,int &maxh,int p=-1,int h=0){
    //  dbg("dfs_2",v)
    if(h>k)return;
    maxh = max(h,maxh);
    freq[h]++;
    for(auto c:adj[v]){
        if(c==p || processed[c])continue;
        dfs2(c,maxh,v,h+1);
    }
}
 
void dfs1(int v,int p=-1,int h=0){
    // dbg("dfs_1",v)
    if(h>k)return;
    ans+=freq[k-h];
    for(auto c:adj[v]){
        if(c==p || processed[c])continue;
        dfs1(c,v,h+1);
    }
}
 
void count(int v){
 
    freq[0]++;
    int maxh=0;
    
    for(auto c:adj[v]){
        if(processed[c])continue;
        dfs1(c,v,1);
        dfs2(c,maxh,v,1);
    }
    
    fill(freq, freq + maxh + 1, 0);
}
 
 
 
void build_cent(int v){
    int cent = getCent(v,-1,getSubtreeSize(v));
 
    processed[cent]=true;
 
    count(cent);
 
    for(auto c:adj[cent]){
        if(processed[c])continue;   
        build_cent(c);
    }
 
}
int32_t main(){
    sws
    int n;cin>>n>>k;
    rep(i,0,n-1){
        int a,b;
        cin>>a>>b;
        adj[a].pb(b);
        adj[b].pb(a);
    }
 
    build_cent(1);
 
    cout<<ans;
 
}